{
	"info": {
		"_postman_id": "3ef05c85-0865-4a82-bf19-66cc5db35bac",
		"name": "Otus-8",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Register e-shop user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Registering e-shop user...\");\r",
							"var jsonData = JSON.parse(pm.request.body.raw);\r",
							"postman.setEnvironmentVariable(\"login1\", jsonData.login);\r",
							"postman.setEnvironmentVariable(\"password1\", jsonData.password);\r",
							"console.log(\"User name: \", jsonData.login);\r",
							"console.log(\"User pass: \", jsonData.password);\r",
							"\r",
							"pm.expect(201).to.eql(pm.response.code);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"login\": \"{{$randomUserName}}\",\r\n  \"password\": \"{{$randomPassword}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/auth/register",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login of e-shop user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Logging in e-shop user: \", postman.getEnvironmentVariable(\"login1\"));\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"const dateNow= new Date();\r",
							"postman.setEnvironmentVariable(\"token1\", jsonData.token);\r",
							"postman.setEnvironmentVariable(\"deliveryDate\", Math.floor(2020 + Math.random() * 10000) + '-01-01T18:00:00');\r",
							"console.log(\"Got session: \", jsonData.token);\r",
							"\r",
							"pm.expect(200).to.eql(pm.response.code);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"login\": \"{{login1}}\",\r\n  \"password\": \"{{password1}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/auth/login",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update profile (email)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Creation of new order via event submission\");\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"\r",
							"pm.expect(200).to.eql(pm.response.code);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "session={{token1}}",
						"type": "text"
					},
					{
						"key": "X-User",
						"value": "{{login1}}",
						"type": "text"
					},
					{
						"key": "X-Roles",
						"value": "user",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"firstName\": \"{{$randomFirstName}}\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"userId\": \"{{login1}}\",\r\n  \"city\": \"{{$randomCity}}\",\r\n  \"postalCode\": \"220030\",\r\n  \"addressLine\": \"{{$randomStreetAddress}}\",\r\n  \"phone\": \"{{$randomPhoneNumber}}\",\r\n  \"version\": 0\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/profiles/self",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"profiles",
						"self"
					]
				}
			},
			"response": []
		},
		{
			"name": "Put some money one the account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Creation of new order via event submission\");\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable(\"orderId\", jsonData.id);\r",
							"\r",
							"console.log(\"Amount of money: \", jsonData.amount);\r",
							"\r",
							"pm.expect(200).to.eql(pm.response.code);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "session={{token1}}",
						"type": "text"
					},
					{
						"key": "X-User",
						"value": "{{login1}}",
						"type": "text"
					},
					{
						"key": "X-Roles",
						"value": "user",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"amount\": 450.00\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/accounts/self",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"accounts",
						"self"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create an order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Creation of new order via event submission\");\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable(\"orderId\", jsonData.id);\r",
							"\r",
							"console.log(\"New order create with id: \", jsonData.id);\r",
							"\r",
							"pm.expect(200).to.eql(pm.response.code);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": "session={{token1}}",
						"type": "text"
					},
					{
						"key": "X-User",
						"value": "{{login1}}",
						"type": "text"
					},
					{
						"key": "X-Roles",
						"value": "user",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{baseUrl}}/events/orders",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"events",
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add first item to the order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Adding first item to the order\");\r",
							"\r",
							"pm.expect(200).to.eql(pm.response.code);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": "session={{token1}}",
						"type": "text"
					},
					{
						"key": "X-User",
						"value": "{{login1}}",
						"type": "text"
					},
					{
						"key": "X-Roles",
						"value": "user",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{baseUrl}}/events/orders/{{orderId}}/1/2?xReqId=71042fa1-664e-4568-9d60-fc9a85db844c",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"events",
						"orders",
						"{{orderId}}",
						"1",
						"2"
					],
					"query": [
						{
							"key": "xReqId",
							"value": "71042fa1-664e-4568-9d60-fc9a85db844c"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add second item to the order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Adding second item to the order\");\r",
							"\r",
							"pm.expect(200).to.eql(pm.response.code);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": "session={{token1}}",
						"type": "text"
					},
					{
						"key": "X-User",
						"value": "{{login1}}",
						"type": "text"
					},
					{
						"key": "X-Roles",
						"value": "user",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{baseUrl}}/events/orders/{{orderId}}/3/2?xReqId=fe631d16-f878-481e-a593-2754a631471a",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"events",
						"orders",
						"{{orderId}}",
						"3",
						"2"
					],
					"query": [
						{
							"key": "xReqId",
							"value": "fe631d16-f878-481e-a593-2754a631471a"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Check the validity of the order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Load the full information from the created order: \", postman.getEnvironmentVariable(\"orderId\"));\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"console.log(\"Items in the order: \", jsonData.items.length);\r",
							"\r",
							"console.log(\"Check that first item is in order\");\r",
							"pm.expect(\"1\").to.eql(jsonData.items[0].itemId);\r",
							"console.log(\"Check that second item is in order\");\r",
							"pm.expect(\"3\").to.eql(jsonData.items[1].itemId);\r",
							"\r",
							"pm.expect(2).to.eql(jsonData.items.length);\r",
							"pm.expect(200).to.eql(pm.response.code);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": "session={{token1}}",
						"type": "text"
					},
					{
						"key": "X-User",
						"value": "{{login1}}",
						"type": "text"
					},
					{
						"key": "X-Roles",
						"value": "user",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{baseUrl}}/orders/{{orderId}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders",
						"{{orderId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Send first order for billing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Send order for billing: \", postman.getEnvironmentVariable(\"orderId\"));\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"console.log(\"New order create with id: \", jsonData.id);\r",
							"\r",
							"pm.expect(200).to.eql(pm.response.code);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": "session={{token1}}",
						"type": "text"
					},
					{
						"key": "X-User",
						"value": "{{login1}}",
						"type": "text"
					},
					{
						"key": "X-Roles",
						"value": "user",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"description\": \"Deliver as soon as possible\",\r\n    \"deliveryTime\": \"{{deliveryDate}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/events/orders/{{orderId}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"events",
						"orders",
						"{{orderId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a second order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Creation of new order via event submission\");\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable(\"orderId\", jsonData.id);\r",
							"\r",
							"console.log(\"New order create with id: \", jsonData.id);\r",
							"\r",
							"pm.expect(200).to.eql(pm.response.code);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": "session={{token1}}",
						"type": "text"
					},
					{
						"key": "X-User",
						"value": "{{login1}}",
						"type": "text"
					},
					{
						"key": "X-Roles",
						"value": "user",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{baseUrl}}/events/orders",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"events",
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add first item to the second order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Adding first item to the order\");\r",
							"pm.expect(200).to.eql(pm.response.code);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": "session={{token1}}",
						"type": "text"
					},
					{
						"key": "X-User",
						"value": "{{login1}}",
						"type": "text"
					},
					{
						"key": "X-Roles",
						"value": "user",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{baseUrl}}/events/orders/{{orderId}}/1/5?xReqId=d6354e35-20d6-48ae-82a9-5853f20752c2",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"events",
						"orders",
						"{{orderId}}",
						"1",
						"5"
					],
					"query": [
						{
							"key": "xReqId",
							"value": "d6354e35-20d6-48ae-82a9-5853f20752c2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add second item to the second order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Adding second item to the order\");\r",
							"\r",
							"pm.expect(200).to.eql(pm.response.code);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": "session={{token1}}",
						"type": "text"
					},
					{
						"key": "X-User",
						"value": "{{login1}}",
						"type": "text"
					},
					{
						"key": "X-Roles",
						"value": "user",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{baseUrl}}/events/orders/{{orderId}}/2/4?xReqId=432a5b6c-b263-4cd7-b8f2-5bf8457f4556",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"events",
						"orders",
						"{{orderId}}",
						"2",
						"4"
					],
					"query": [
						{
							"key": "xReqId",
							"value": "432a5b6c-b263-4cd7-b8f2-5bf8457f4556"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Send second order for billing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Send order for billing: \", postman.getEnvironmentVariable(\"orderId\"));\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"console.log(\"New order create with id: \", jsonData.id);\r",
							"\r",
							"pm.expect(200).to.eql(pm.response.code);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": "session={{token1}}",
						"type": "text"
					},
					{
						"key": "X-User",
						"value": "{{login1}}",
						"type": "text"
					},
					{
						"key": "X-Roles",
						"value": "user",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"description\": \"Deliver as soon as possible\",\r\n    \"deliveryTime\": \"{{deliveryDate}}\"    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/events/orders/{{orderId}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"events",
						"orders",
						"{{orderId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create an third order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Creation of new order via event submission\");\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable(\"orderId\", jsonData.id);\r",
							"\r",
							"console.log(\"New order create with id: \", jsonData.id);\r",
							"\r",
							"pm.expect(200).to.eql(pm.response.code);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": "session={{token1}}",
						"type": "text"
					},
					{
						"key": "X-User",
						"value": "{{login1}}",
						"type": "text"
					},
					{
						"key": "X-Roles",
						"value": "user",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{baseUrl}}/events/orders",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"events",
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add an item for third order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Adding first item to the order\");\r",
							"\r",
							"pm.expect(200).to.eql(pm.response.code);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": "session={{token1}}",
						"type": "text"
					},
					{
						"key": "X-User",
						"value": "{{login1}}",
						"type": "text"
					},
					{
						"key": "X-Roles",
						"value": "user",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{baseUrl}}/events/orders/{{orderId}}/1/2?xReqId=71042fa1-664e-4568-9d60-fc9a85db844c",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"events",
						"orders",
						"{{orderId}}",
						"1",
						"2"
					],
					"query": [
						{
							"key": "xReqId",
							"value": "71042fa1-664e-4568-9d60-fc9a85db844c"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Check the validity of the order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Load the full information from the created order: \", postman.getEnvironmentVariable(\"orderId\"));\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"console.log(\"Items in the order: \", jsonData.items.length);\r",
							"\r",
							"console.log(\"Check that first item is in order\");\r",
							"pm.expect(\"1\").to.eql(jsonData.items[0].itemId);\r",
							"\r",
							"pm.expect(200).to.eql(pm.response.code);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": "session={{token1}}",
						"type": "text"
					},
					{
						"key": "X-User",
						"value": "{{login1}}",
						"type": "text"
					},
					{
						"key": "X-Roles",
						"value": "user",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{baseUrl}}/orders/{{orderId}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders",
						"{{orderId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Send third order for billing (same delivery time)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Send order for billing: \", postman.getEnvironmentVariable(\"orderId\"));\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"console.log(\"New order create with id: \", jsonData.id);\r",
							"\r",
							"pm.expect(200).to.eql(pm.response.code);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": "session={{token1}}",
						"type": "text"
					},
					{
						"key": "X-User",
						"value": "{{login1}}",
						"type": "text"
					},
					{
						"key": "X-Roles",
						"value": "user",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"description\": \"Deliver as soon as possible\",\r\n    \"deliveryTime\": \"{{deliveryDate}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/events/orders/{{orderId}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"events",
						"orders",
						"{{orderId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "List all orders for user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Load orders for current user\");\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"pm.expect(200).to.eql(pm.response.code);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": "session={{token1}}",
						"type": "text"
					},
					{
						"key": "X-User",
						"value": "{{login1}}",
						"type": "text"
					},
					{
						"key": "X-Roles",
						"value": "user",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{baseUrl}}/orders",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check amount of money on the account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Load the full information from the created order: \", postman.getEnvironmentVariable(\"orderId\"));\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"console.log(\"Amount of money: \", jsonData.amount);\r",
							"\r",
							"console.log(\"Check that we reserved right amount of money\");\r",
							"pm.expect(236.04).to.eql(jsonData.amount);\r",
							"\r",
							"pm.expect(200).to.eql(pm.response.code);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": "session={{token1}}",
						"type": "text"
					},
					{
						"key": "X-User",
						"value": "{{login1}}",
						"type": "text"
					},
					{
						"key": "X-Roles",
						"value": "user",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{baseUrl}}/accounts/self",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"accounts",
						"self"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout for e-shop user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Logout for user: \", postman.getEnvironmentVariable(\"login1\"));\r",
							"\r",
							"pm.expect(204).to.eql(pm.response.code);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Cookie",
						"value": "session={{token1}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"token\": \"{{token1}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/auth/logout",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login for e-shop admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Logging in admin user\");\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable(\"token2\", jsonData.token);\r",
							"console.log(\"Got session: \", jsonData.token);\r",
							"\r",
							"pm.expect(200).to.eql(pm.response.code);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"login\": \"admin\",\r\n  \"password\": \"admin123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/auth/login",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "List all orders for admin order by STATE asc",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Load orders for admin order by STATE\");\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"console.log(\"Check that order of data is valid\");\r",
							"pm.expect(\"WAITING\").to.eql(jsonData[0].state);\r",
							"\r",
							"\r",
							"pm.expect(200).to.eql(pm.response.code);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": "session={{token2}}",
						"type": "text"
					},
					{
						"key": "X-User",
						"value": "admin",
						"type": "text"
					},
					{
						"key": "X-Roles",
						"value": "user,admin",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{baseUrl}}/orders?sort=-creationDate",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders"
					],
					"query": [
						{
							"key": "sort",
							"value": "-creationDate"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "List all reserved deliveries",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Load orders for admin order by STATE\");\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"console.log(\"Check that we have one delivery for delivery date\");\r",
							"pm.expect(1).to.eql(jsonData[0].counter);\r",
							"\r",
							"pm.expect(200).to.eql(pm.response.code);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": "session={{token2}}",
						"type": "text"
					},
					{
						"key": "X-User",
						"value": "admin",
						"type": "text"
					},
					{
						"key": "X-Roles",
						"value": "user,admin",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{baseUrl}}/deliveries",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"deliveries"
					]
				}
			},
			"response": []
		},
		{
			"name": "List all reserved items in warehouse",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Load orders for admin order by STATE\");\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"console.log(\"Check that we reserved only 2 items for goods 1 & 3\");\r",
							"\r",
							"pm.expect(true).to.eql(jsonData[0].reserved >= 2);\r",
							"pm.expect(0).to.eql(jsonData[1].reserved);\r",
							"pm.expect(true).to.eql(jsonData[2].reserved >= 2);\r",
							"pm.expect(0).to.eql(jsonData[3].reserved);\r",
							"pm.expect(0).to.eql(jsonData[4].reserved);\r",
							"\r",
							"pm.expect(200).to.eql(pm.response.code);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": "session={{token2}}",
						"type": "text"
					},
					{
						"key": "X-User",
						"value": "admin",
						"type": "text"
					},
					{
						"key": "X-Roles",
						"value": "user,admin",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{baseUrl}}/warehouseproducts",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"warehouseproducts"
					]
				}
			},
			"response": []
		}
	]
}